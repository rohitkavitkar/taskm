<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        h1 {
            color: #e67e22;
        }

        .controls {
            display: flex;
            justify-content: flex-start; 
            margin-bottom: 10px;
        }

        .btn-add, .btn-refresh {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            background-color: #3498db;
            color: white;
            cursor: pointer;
            margin-right: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }

        th {
            background-color: #e67e22;
            color: white;
        }

        .action-btn {
            margin-right: 5px;
            padding: 5px;
            border: none;
            background: none;
            cursor: pointer;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%; 
            height: 100%; 
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fff;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 90%;
            max-width: 500px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        /* Redesigned Form */
        .modal-content h2 {
            margin-top: 0;
            color: #3498db;
            font-size: 24px;
        }

        form {
            display: flex;
            flex-direction: column;
        }

        label {
            font-size: 14px;
            color: #333;
            margin-bottom: 5px;
        }

        input[type="text"], input[type="email"], input[type="tel"], select {
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
            width: 100%;
            box-sizing: border-box;
        }

        select {
            background-color: white;
            color: #333;
        }

        .btn-save {
            background-color: #3498db;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }

        .btn-save:hover {
            background-color: #2980b9;
        }

        .hidden-delete {
            display: none; /* use inline to show delete button */
        }

    </style>
</head>
<body>
    <h1>Employee List</h1>
    <div class="controls">
        <button class="btn-refresh">ðŸ”„ Refresh</button>
        <button class="btn-add">+ Add New</button>
    </div>
    <table id="employeeTable">
        <thead>
            <tr>
                <th>Sr.No.</th>
                <th>Name</th>
                <th>Type</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <!-- Table body will be populated by JavaScript -->
        </tbody>
    </table>

    <!-- Modal for Editing Employee -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeModal">&times;</span>
            <h2>Edit Employee Details</h2>
            <form id="editForm">
                <input type="hidden" id="employeeId">
                
                <label for="employeeName">Name:</label>
                <input type="text" id="employeeName" required>

                <label for="employeeType">Type:</label>
                <select id="employeeType" required>
                    <option value="" disabled selected>Select employee type</option>
                    <option value="Ordinary employee">Ordinary Employee</option>
                    <option value="Sales employee">Sales Employee</option>
                </select>

                <label for="employeeEmail">Email:</label>
                <input type="email" id="employeeEmail" required>

                <label for="employeePhone">Phone:</label>
                <input type="tel" id="employeePhone" required>

                <button type="submit" class="btn-save">Save Changes</button>
            </form>
        </div>
    </div>

    <!-- Modal for Deleting Employee -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeDeleteModal">&times;</span>
            <h2>Confirm Deletion</h2>
            <p>Are you sure you want to delete this employee?</p>
            <button class="btn-delete" id="confirmDeleteBtn">Delete</button>
            <button class="btn-cancel" id="cancelDeleteBtn">Cancel</button>
        </div>
    </div>

    <script>// Fetch employee data and populate the table
        function fetchEmployeeData() {
            fetch('/employees')
                .then(response => response.json())
                .then(data => populateTable(data))
                .catch(error => console.error('Error fetching employee data:', error));
        }
        
        // Populate the table with employee data
        function populateTable(data) {
            const tableBody = document.querySelector('#employeeTable tbody');
            tableBody.innerHTML = ''; // Clear existing rows
        
            data.forEach((employee, index) => {
                const row = tableBody.insertRow();
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${employee.name}</td>
                    <td>${employee.employee_type}</td>
                    <td>${employee.email}</td>
                    <td>${employee.phone}</td>
                    <td>
                        <button class="action-btn" onclick="editEmployee(${employee.id})">Edit</button>
                        <button class="action-btn hidden-delete" onclick="openDeleteModal(${employee.id})">Delete</button>
                    </td>
                `;
            });
        }
        
        // Call fetchEmployeeData when the page loads
        window.onload = fetchEmployeeData;
        
        // Redirect when "Add New" button is clicked
        document.querySelector('.btn-add').addEventListener('click', () => {
            window.location.href = '/employee/add'; // Replace with actual URL for adding employees
        });
        
        // Refresh the page when "Refresh" button is clicked
        document.querySelector('.btn-refresh').addEventListener('click', () => {
            location.reload();
        });
        
        // Edit Employee function
        function editEmployee(id) {
            fetch(`/employees/${id}`)
                .then(response => response.json())
                .then(employee => {
                    document.getElementById('employeeId').value = employee.id;
                    document.getElementById('employeeName').value = employee.name;
                    document.getElementById('employeeType').value = employee.employee_type;
                    document.getElementById('employeeEmail').value = employee.email;
                    document.getElementById('employeePhone').value = employee.phone;
        
                    // Display the modal
                    document.getElementById('editModal').style.display = "block";
                })
                .catch(error => console.error('Error fetching employee data for edit:', error));
        }
        
        // Close the edit modal when the user clicks on <span> (x)
        document.getElementById('closeModal').onclick = function() {
            document.getElementById('editModal').style.display = "none";
        }
        
        // Close the edit modal when the user clicks anywhere outside of the modal
        window.onclick = function(event) {
            if (event.target === document.getElementById('editModal')) {
                document.getElementById('editModal').style.display = "none";
            }
        }
        
        // Handle form submission for editing an employee
        document.getElementById('editForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the form from submitting the default way
            
            const employeeId = document.getElementById('employeeId').value;
            const updatedEmployee = {
                name: document.getElementById('employeeName').value,
                employee_type: document.getElementById('employeeType').value,
                email: document.getElementById('employeeEmail').value,
                phone: document.getElementById('employeePhone').value
            };
        
            fetch(`/employees/${employeeId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedEmployee)
            })
            .then(response => {
                if (response.ok) {
                    document.getElementById('editModal').style.display = "none";
                    fetchEmployeeData(); // Refresh the employee table after the update
                } else {
                    console.error('Error updating employee data:', response.statusText);
                }
            })
            .catch(error => console.error('Error updating employee:', error));
        });
        
        // Close the delete modal when the user clicks on <span> (x)
        document.getElementById('closeDeleteModal').onclick = function() {
            document.getElementById('deleteModal').style.display = "none";
        }
        
        // Open Delete Modal
        function openDeleteModal(id) {
            employeeIdToDelete = id; // Store the employee ID to delete
            document.getElementById('deleteModal').style.display = "block";
        }
        
        // Cancel Deletion
        document.getElementById('cancelDeleteBtn').onclick = function() {
            document.getElementById('deleteModal').style.display = "none";
        }
        
        // Confirm Deletion
        document.getElementById('confirmDeleteBtn').onclick = function() {
            fetch(`/employees/${employeeIdToDelete}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    fetchEmployeeData(); // Refresh the table after deletion
                    document.getElementById('deleteModal').style.display = "none"; // Hide modal
                }
            })
            .catch(error => console.error('Error deleting employee:', error));
        }
        
    </script>
</body>
</html>
